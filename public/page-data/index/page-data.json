{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"32b9034118c63d57fee4","result":{"data":{"deck":{"id":"23869a03-7695-5139-af01-0c8b8da1e96c","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = themes.yellow;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Fun with Generator Functions\"), mdx(\"p\", null, \"by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://landr.me/jason\"\n  }), \"Jason Wohlgemuth\"), \" using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codesurfer.pomb.us\"\n  }), \"Code Surfer\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: nightOwl,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"This is a generator function\\\"\",\n    \"title\": \"\\\"This\",\n    \"is\": true,\n    \"a\": true,\n    \"generator\": true,\n    \"function\\\"\": true\n  }), \"function* iter(value) {\\n    // code code code\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:7\",\n    \"1:7\": true\n  }), \"function* iter(value) {\\n    yield 'one';\\n    yield 'two';\\n    yield value;\\n    yield* ['one', 'two', 'three'];\\n    return 'a value';\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1 subtitle=\\\"* not a footnote\\\"\",\n    \"subtitle\": \"\\\"*\",\n    \"not\": true,\n    \"a\": true,\n    \"footnote\\\"\": true\n  }), \"function* iter(value) {\\n    yield 'one';\\n    yield 'two';\\n    yield value;\\n    yield* ['one', 'two', 'three'];\\n    return 'a value';\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"2:3 subtitle=\\\"yield values one at a time\\\"\",\n    \"2:3\": true,\n    \"subtitle\": \"\\\"yield\",\n    \"values\": true,\n    \"one\": true,\n    \"at\": true,\n    \"a\": true,\n    \"time\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1,4 subtitle=\\\"yield a passed parameter\\\"\",\n    \"1,4\": true,\n    \"subtitle\": \"\\\"yield\",\n    \"a\": true,\n    \"passed\": true,\n    \"parameter\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5 subtitle=\\\"yield an iterable\\\"\",\n    \"subtitle\": \"\\\"yield\",\n    \"an\": true,\n    \"iterable\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"6\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"6 subtitle=\\\"return (yield) a value\\\"\",\n    \"subtitle\": \"\\\"return\",\n    \"(yield)\": true,\n    \"a\": true,\n    \"value\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    themes: [nightOwl, github],\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function* iter(value) {\\n    yield 'one';\\n    yield 'two';\\n    yield value;\\n    yield ['a', 'b', 'c'];\\n    yield* ['a', 'b', 'c'];\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1\"\n  }), \"\\nconst foo = iter('three');\\nfoo.next();\\nfoo.next();\\nfoo.next();\\nfoo.next();\\nfoo.next();\\nfoo.next();\\nfoo.next();\\nfoo.next();\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 subtitle=\\\"Generator {  }\\\"\",\n    \"subtitle\": \"\\\"Generator\",\n    \"{\": true,\n    \"\": true,\n    \"}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 subtitle=\\\"{value: 'one', done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'one',\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4 subtitle=\\\"{value: 'two', done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'two',\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[16:20],4\",\n    \"1[16:20],4\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"2[18:24],5 subtitle=\\\"{value: 'three', done: false}\\\"\",\n    \"2[18:24],5\": true,\n    \"subtitle\": \"\\\"{value:\",\n    \"'three',\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"6\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"6 subtitle=\\\"{value: ['a', 'b', 'c'], done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"['a',\": true,\n    \"'b',\": true,\n    \"'c'],\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"6[5:10,13:15]\",\n    \"6[5:10,13:15]\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"7\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"7 subtitle=\\\"{value: 'a', done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'a',\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"6[5:10,17:20]\",\n    \"6[5:10,17:20]\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"8\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"8 subtitle=\\\"{value: 'b', done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'b',\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"6[5:10,23:26]\",\n    \"6[5:10,23:26]\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"9\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"9 subtitle=\\\"{value: 'c', done: true}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'c',\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"9\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"9\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"10\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"10 subtitle=\\\"{value: undefined, done: true}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    themes: [nightOwl, github],\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function* iter() {\\n    yield 'What?!?';\\n    return 'OK!!!'; \\n    yield 'Huh?';\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1\"\n  }), \"\\nconst john = iterWithReturn();\\njohn.next();\\njohn.next();\\njohn.next();\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 subtitle=\\\"{value: 'What?!?', done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'What?!?',\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4 subtitle=\\\"{value: 'OK!!!', done: true}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"'OK!!!',\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"6\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"6\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5 subtitle=\\\"{value: undefined, done: true}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    themes: [nightOwl, github],\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function* iter() {\\n    // first next stops here\\n    console.log(yield);\\n    console.log(yield);\\n    return yield;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1\"\n  }), \"\\nconst foo = iter();\\nfoo.next(0);\\nfoo.next(1);\\nfoo.next(2);\\nfoo.next(3);\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 subtitle=\\\"{value: undefined, done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4 subtitle=\\\"{value: undefined, done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5 subtitle=\\\"{value: undefined, done: false}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"6\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"6 subtitle=\\\"{value: 3, done: true}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"3,\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"\")))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    themes: [nightOwl, github],\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function* iter() {\\n    // first next stops here\\n    const sum = yield + yield;\\n    return sum;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1\"\n  }), \"\\nconst calc = add();\\ncalc.next();\\ncalc.next(40);\\ncalc.next(2);\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 subtitle=\\\"FAIL\\\"\",\n    \"subtitle\": \"\\\"FAIL\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function* iter() {\\n    // first next stops here\\n    const sum = (yield) + (yield);\\n    return sum;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1\"\n  }), \"function* iter() {\\n    // first next stops here\\n    const sum = (yield) + (yield);\\n    return sum;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 subtitle=\\\"Generator {  }\\\"\",\n    \"subtitle\": \"\\\"Generator\",\n    \"{\": true,\n    \"\": true,\n    \"}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"start\\\" subtitle=\\\"{value: undefined, done: false}\\\"\",\n    \"title\": \"\\\"start\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"3[17:23]\",\n    \"3[17:23]\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4 title=\\\"add 40\\\" subtitle=\\\"{value: undefined, done: false}\\\"\",\n    \"title\": \"\\\"add\",\n    \"40\\\"\": true,\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"false}\\\"\": true\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"3[26:33],4\",\n    \"3[26:33],4\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5 title=\\\"add 2, return result\\\" subtitle=\\\"{value: 42, done: true}\\\"\",\n    \"title\": \"\\\"add\",\n    \"2,\": true,\n    \"return\": true,\n    \"result\\\"\": true,\n    \"subtitle\": \"\\\"{value:\",\n    \"42,\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n//TODO use generator functions as object property\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: nightOwl,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"This is a function as an object property\\\"\",\n    \"title\": \"\\\"This\",\n    \"is\": true,\n    \"a\": true,\n    \"function\": true,\n    \"as\": true,\n    \"an\": true,\n    \"object\": true,\n    \"property\\\"\": true\n  }), \"const foo = {\\n    iter() {\\n        // code code code\\n    }\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:5 title=\\\"This is a generator function as an object property\\\"\",\n    \"1:5\": true,\n    \"title\": \"\\\"This\",\n    \"is\": true,\n    \"a\": true,\n    \"generator\": true,\n    \"function\": true,\n    \"as\": true,\n    \"an\": true,\n    \"object\": true,\n    \"property\\\"\": true\n  }), \"const foo = {\\n    *iter() {\\n        // code code code\\n    }\\n};\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n//TODO use generator functions as object property\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n//TODO use generator functions as object property\\n//TODO use generator functions as computed property\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: nightOwl,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const iter = {\\n    *[Symbol.iterator]() {\\n        yield 1;\\n        yield 2;\\n        yield 3;\\n    }\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 title=\\\"implement the @@iterator method\\\"\",\n    \"title\": \"\\\"implement\",\n    \"the\": true,\n    \"@@iterator\": true,\n    \"method\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"[1, 2, 3]\\\"\",\n    \"subtitle\": \"\\\"[1,\",\n    \"2,\": true,\n    \"3]\\\"\": true\n  }), \"const iter = {\\n    *[Symbol.iterator]() {\\n        yield 1;\\n        yield 2;\\n        yield 3;\\n    }\\n};\\n\\nconst easy = [...iter];\\nconsole.log(easy);\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n//TODO use generator functions as object property\\n//TODO use generator functions as computed property\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"//TODO use generator functions\\n//TODO use generator functions with return\\n//TODO use generator functions with parameters\\n//TODO use generator functions as object property\\n//TODO use generator functions as computed property\\n//TODO use generator functions in real life\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: nightOwl,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Real world example\\\"\",\n    \"title\": \"\\\"Real\",\n    \"world\": true,\n    \"example\\\"\": true\n  }), \"function* seq(start, stop) {\\n    let index = start;\\n    while (index <= stop) {\\n        yield index++;\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:7 title=\\\"Real world example\\\"\",\n    \"1:7\": true,\n    \"title\": \"\\\"Real\",\n    \"world\": true,\n    \"example\\\"\": true\n  }), \"function* seq(...args) {\\n    const [start, stop] = args;\\n    let index = stop ? start : 0;\\n    while (index <= (stop || start)) {\\n        yield index++;\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"[3, 4, 5, 6, 7]\\\"\",\n    \"subtitle\": \"\\\"[3,\",\n    \"4,\": true,\n    \"5,\": true,\n    \"6,\": true,\n    \"7]\\\"\": true\n  }), \"function* seq(...args) {\\n    const [start, stop] = args;\\n    let index = stop ? start : 0;\\n    while (index <= (stop || start)) {\\n        yield index++;\\n    }\\n}\\n\\nconst numbers = [...seq(3, 7)];\\nconsole.log(numbers);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"{value: undefined, done: true}\\\"\",\n    \"subtitle\": \"\\\"{value:\",\n    \"undefined,\": true,\n    \"done:\": true,\n    \"true}\\\"\": true\n  }), \"function* seq(...args) {\\n    const [start, stop] = args;\\n    let index = stop ? start : 0;\\n    while (index <= (stop || start)) {\\n        yield index++;\\n    }\\n}\\n\\nconst range = seq(5);\\nconst numbers = [...range];\\nconsole.log(range.next());\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"[0, 1, 2, 3, 4, 5]\\\"\",\n    \"subtitle\": \"\\\"[0,\",\n    \"1,\": true,\n    \"2,\": true,\n    \"3,\": true,\n    \"4,\": true,\n    \"5]\\\"\": true\n  }), \"function* seq(...args) {\\n    const [start, stop] = args;\\n    let index = stop ? start : 0;\\n    while (index <= (stop || start)) {\\n        yield index++;\\n    }\\n}\\n\\nconst range = seq(5);\\nconst numbers = [...range];\\nconsole.log(range.next());\\nconsole.log(numbers);\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: nightOwl,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Another real world example\\\"\",\n    \"title\": \"\\\"Another\",\n    \"real\": true,\n    \"world\": true,\n    \"example\\\"\": true\n  }), \"const toArray = val => [...val[Symbol.iterator]()];\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1[31:47] subtitle=\\\"ordinary function, or generator function???\\\"\",\n    \"1[31:47]\": true,\n    \"subtitle\": \"\\\"ordinary\",\n    \"function,\": true,\n    \"or\": true,\n    \"generator\": true,\n    \"function???\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"turns strings into arrays\\\" subtitle=\\\"['a', 'b', 'c']\\\"\",\n    \"title\": \"\\\"turns\",\n    \"strings\": true,\n    \"into\": true,\n    \"arrays\\\"\": true,\n    \"subtitle\": \"\\\"['a',\",\n    \"'b',\": true,\n    \"'c']\\\"\": true\n  }), \"const toArray = val => [...val[Symbol.iterator]()];\\n\\ntoArray('abc');\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"...and acts like identity for arrays!\\\" subtitle=\\\"['a', 'b', 'c']\\\"\",\n    \"title\": \"\\\"...and\",\n    \"acts\": true,\n    \"like\": true,\n    \"identity\": true,\n    \"for\": true,\n    \"arrays!\\\"\": true,\n    \"subtitle\": \"\\\"['a',\",\n    \"'b',\": true,\n    \"'c']\\\"\": true\n  }), \"const toArray = val => [...val[Symbol.iterator]()];\\n\\ntoArray('abc');\\n\\ntoArray(['a', 'b', 'c']);\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.ecma-international.org/ecma-262/6.0/#sec-generator-function-definitions\"\n  }), \"ECMAScript Language Specification\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\"\n  }), \"MDN Docs for function*\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.wix.engineering/post/breaking-chains-with-pipelines-in-modern-javascript\"\n  }), \"Breaking Chains with Pipelines in JavaScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://dev.to/jfet97/javascript-iterators-and-generators-synchronous-generators-3ai4\"\n  }), \"JavaScript Iterators and Generators: Synchronous Generators\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"23869a03-7695-5139-af01-0c8b8da1e96c","slug":"","title":"Fun with Generator Functions"}}}